# file: $NEDC_NFC/util/python/nedc_imld/v4.0.0/algo_params_v00.toml
#
# A parameter file that defines key paramaters for algorithms.
#

# set version "inf"ormation
#
version = "param_v1.0.0"

# set the list of algorithms
#
LIST = [
    "EUCLIDEAN",
    "PCA",
    "LDA",
    "QDA",
    "QLDA",
    "NB",
    "GMM",
    "KNN",
    "KMEANS",
    "RNF",
    "SVM",
    "MLP",
    "RBM",
    "TRANSFORMER",
    "QSVM",
    "QNN",
    "QRBM"
]

#------------------------------------------------------------------------------
#
# Section 1: discriminant-based algorithms
#
#------------------------------------------------------------------------------

[EUCLIDEAN]
    name = "Euclidean Distance"
    [EUCLIDEAN.params]
        [EUCLIDEAN.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["discriminant"]
            default = "discriminant"
        [EUCLIDEAN.params.weights]
            name = "Weights"
            type = "class-based"
            default = 1

[PCA]
    name = "Principle Component Analysis (PCA)"
    [PCA.params]
        [PCA.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["discriminant"]
            default = "discriminant"
        [PCA.params.priors]
            name = "Prior Probability"
            type = "select"
            options = ["ml", "map"]
            default = "ml"
        [PCA.params.ctype]
            name = "Covariance Type"
            type = "select"
            options = ["full", "diagonal"]
            default = "full"
        [PCA.params.center]
            name = "Center"
            type = "select"
            options = ["none", "tied", "untied"]
            default = "none"
        [PCA.params.scale]
            name = "Scale"
            type = "select"
            options = ["none", "biased", "unbiased", "empirical"]
            default = "none"
        [PCA.params.n_components]
            name = "Number of Components"
            type = "int"
            range = [0, 2] # range for IMLD since its 2D
            default = 2 # default value for IMLD since its 2D

[LDA]
    name = "Linear Discriminant Analysis (LDA)"
    [LDA.params]
        [LDA.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["discriminant"]
            default = "discriminant"
        [LDA.params.priors]
            name = "Prior Probability"
            type = "select"
            options = ["ml", "map"]
            default = "ml"
        [LDA.params.ctype]
            name = "Covariance Type"
            type = "select"
            options = ["full", "diagonal"]
            default = "full"
        [LDA.params.center]
            name = "Center"
            type = "select"
            options = ["none", "tied", "untied"]
            default = "none"
        [LDA.params.scale]
            name = "Scale"
            type = "select"
            options = ["none", "biased", "unbiased", "empirical"]
            default = "none"
        [LDA.params.n_components]
            name = "Number of Components"
            type = "int"
            range = [0, 2] # range for IMLD since its 2D
            default = 2 # default value for IMLD since its 2D

[QDA]
    name = "Quadratic Components Analysis (QDA)"
    [QDA.params]
        [QDA.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["discriminant"]
            default = "discriminant"
        [QDA.params.priors]
            name = "Prior Probability"
            type = "select"
            options = ["ml", "map"]
            default = "ml"
        [QDA.params.ctype]
            name = "Covariance Type"
            type = "select"
            options = ["full", "diagonal"]
            default = "full"
        [QDA.params.center]
            name = "Center"
            type = "select"
            options = ["none", "tied", "untied"]
            default = "none"
        [QDA.params.scale]
            name = "Scale"
            type = "select"
            options = ["none", "biased", "unbiased", "empirical"]
            default = "none"
        [QDA.params.n_components]
            name = "Number of Components"
            type = "int"
            range = [0, 2] # range for IMLD since its 2D
            default = 2 # default value for IMLD since its 2D

[QLDA]
    name = "Quadratic Linear Discriminant Analysis (QLDA)"
    [QLDA.params]
        [QLDA.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["discriminant"]
            default = "discriminant"
        [QLDA.params.priors]
            name = "Prior Probability"
            type = "select"
            options = ["ml", "map"]
            default = "ml"
        [QLDA.params.ctype]
            name = "Covariance Type"
            type = "select"
            options = ["full", "diagonal"]
            default = "full"
        [QLDA.params.center]
            name = "Center"
            type = "select"
            options = ["none", "tied", "untied"]
            default = "none"
        [QLDA.params.scale]
            name = "Scale"
            type = "select"
            options = ["none", "biased", "unbiased", "empirical"]
            default = "none"
        [QLDA.params.n_components]
            name = "Number of Components"
            type = "int"
            range = [0, 2] # range for IMLD since its 2D
            default = 2 # default value for IMLD since its 2D

[NB]
    name = "Naive Bayes (NB)"
    [NB.params]
        [NB.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["sklearn"]
            default = "sklearn"
        [NB.params.priors]
            name = "Prior Probability"
            type = "select"
            options = ["ml", "map"]
            default = "ml"

[GMM]
    name = "Gaussian Mixture Model (GMM)"
    [GMM.params]
        [GMM.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["em"]
            default = "em"
        [GMM.params.priors]
            name = "Prior Probability"
            type = "select"
            options = ["ml", "map"]
            default = "ml"
        [GMM.params.n_components]
            name = "Number of Components"
            type = "int"
            range = [1, 10]
            default = 1
        [GMM.params.random_state]
            name = "Random State"
            type = "int"
            range = [0, "inf"]
            default = 27

#------------------------------------------------------------------------------
#
# Section 2: nonparametric models
#
#------------------------------------------------------------------------------

[KNN]
    name = "K-Nearest Neighbors (KNN)"
    [KNN.params]
        [KNN.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["sklearn"]
            default = "sklearn"
        [KNN.params.k_nearest_neighbors]
            name = "Number of Neighbors"
            type = "int"
            range = [1, "inf"]
            default = 5

[KMEANS]
    name = "K-Means (KMEANS)"
    [KMEANS.params]
        [KMEANS.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["sklearn"]
            default = "sklearn"
        [KMEANS.params.n_clusters]
            name = "Number of Clusters"
            type = "int"
            range = [1, "inf"]
            default = 2
        [KMEANS.params.n_init]
            name = "Number of Initializations"
            type = "int"
            range = [1, "inf"]
            default = 3
        [KMEANS.params.random_state]
            name = "Random State"
            type = "int"
            range = [0, "inf"]
            default = 27
        [KMEANS.params.max_iters]
            name = "Maximum Iterations"
            type = "int"
            range = [1, "inf"]
            default = 100

[RNF]
    name = "Random Forest (RNF)"
    [RNF.params]
        [RNF.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["sklearn"]
            default = "sklearn"
        [RNF.params.n_estimators]
            name = "Number of Estimators"
            type = "int"
            range = [1, "inf"]
            default = 100
        [RNF.params.max_depth]
            name = "Maximum Depth"
            type = "int"
            range = [1, "inf"]
            default = 5
        [RNF.params.criterion]
            name = "Criterion"
            type = "select"
            options = ["gini", "entropy", "log_loss"]
            default = "gini"
        [RNF.params.random_state]
            name = "Random State"
            type = "int"
            range = [0, "inf"]
            default = 27

[SVM]
    name = "Support Vector Machines (SVM)"
    [SVM.params]
        [SVM.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["sklearn"]
            default = "sklearn"
        [SVM.params.c]
            name = "Regularization Parameter (c)"
            type = "float"
            range = [0, 10000]
            default = 1.0
        [SVM.params.gamma]
            name = "Kernel Coefficient (gamma)"
            type = "float"
            range = [0, 10000]
            default = 0.1
        [SVM.params.kernel]
            name = "Kernel"
            type = "select"
            options = ["linear", "poly", "rbf", "sigmoid", "precomputed"]
            default = "linear"

#------------------------------------------------------------------------------
#
# Section 3: neural network-based models
#
#------------------------------------------------------------------------------

[MLP]
    name = "Multi-Layer Perceptron (MLP)"
    [MLP.params]
        [MLP.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["sklearn"]
            default = "sklearn"
        [MLP.params.hidden_size]
            name = "Hidden Size"
            type = "int"
            range = [1, "inf"]
            default = 3
        [MLP.params.activation]
            name = "Activation"
            type = "select"
            options = ["relu", "identity", "logistic", "tanh"]
            default = "relu"
        [MLP.params.solver]
            name = "Solver"
            type = "select"
            options = ["adam", "lbfgs", "sgd"]
            default = "adam"
        [MLP.params.batch_size]
            name = "Batch Size"
            type = "select"
            options = ["auto"]
            default = "auto"
        [MLP.params.learning_rate]
            name = "Learning Rate"
            type = "select"
            options = ["constant", "invscaling", "adaptive"]
            default = "constant"
        [MLP.params.learning_rate_init]
            name = "Initial Learning Rate"
            type = "float"
            range = [0, 1]
            default = 0.001
        [MLP.params.random_state]
            name = "Random State"
            type = "int"
            range = [0, "inf"]
            default = 27
        [MLP.params.momentum]
            name = "Momentum"
            type = "float"
            range = [0, 1]
            default = 0.9
        [MLP.params.validation_fraction]
            name = "Validation Fraction"
            type = "float"
            range = [0, 1]
            default = 0.1
        [MLP.params.max_iters]
            name = "Maximum Iterations"
            type = "int"
            range = [1, "inf"]
            default = 100
        [MLP.params.shuffle]
            name = "Shuffle"
            type = "select"
            options = [true, false]
            default = true
        [MLP.params.early_stopping]
            name = "Early Stopping"
            type = "select"
            options = [true, false]
            default = false

[RBM]
    name = "Restricted Boltzmann Machine (RBM)"
    [RBM.params]
        [RBM.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["sklearn"]
            default = "sklearn"
        [RBM.params.classifier]
            name = "Classifier"
            type = "select"
            options = ["KNN"]
            default = "KNN"
        [RBM.params.learning_rate]
            name = "Learning Rate"
            type = "float"
            range = [0, 1]
            default = 0.1
        [RBM.params.batch_size]
            name = "Batch Size"
            type = "int"
            range = [1, "inf"]
            default = 0
        [RBM.params.verbose]
            name = "Verbose"
            type = "select"
            options = [0]
            default = 0
        [RBM.params.random_state]
            name = "Random State"
            type = "int"
            range = [0, "inf"]
            default = 0
        [RBM.params.n_components]
            name = "Number of Components"
            type = "int"
            range = [1, "inf"]
            default = 2
        [RBM.params.max_iters]
            name = "Maximum Iterations"
            type = "int"
            range = [1, "inf"]
            default = 100

[TRANSFORMER]
    name = "Transformer"
    [TRANSFORMER.params]
        [TRANSFORMER.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["pytorch"]
            default = "pytorch"
        [TRANSFORMER.params.epoch]
            name = "Epoch"
            type = "int"
            range = [1, "inf"]
            default = 50
        [TRANSFORMER.params.learning_rate]
            name = "Learning Rate"
            type = "float"
            range = [0, 1]
            default = 0.001
        [TRANSFORMER.params.batch_size]
            name = "Batch Size"
            type = "int"
            range = [1, "inf"]
            default = 32
        [TRANSFORMER.params.embed_size]
            name = "Embed Size"
            type = "int"
            range = [1, "inf"]
            default = 32
        [TRANSFORMER.params.nheads]
            name = "Number of Heads"
            type = "int"
            range = [1, "inf"]
            default = 2
        [TRANSFORMER.params.num_layers]
            name = "Number of Layers"
            type = "int"
            range = [1, "inf"]
            default = 2
        [TRANSFORMER.params.mlp_dim]
            name = "MLP Dimension"
            type = "int"
            range = [1, "inf"]
            default = 64
        [TRANSFORMER.params.dropout]
            name = "Dropout"
            type = "float"
            range = [0, 1]
            default = 0.1
        [TRANSFORMER.params.random_state]
            name = "Random State"
            type = "int"
            range = [0, "inf"]
            default = 27
        [TRANSFORMER.params.tolerance]
            name = "Tolerance"
            type = "float"
            range = [0, 1]
            default = 0.0001
        [TRANSFORMER.params.validation_fraction]
            name = "Validation Fraction"
            type = "float"
            range = [0, 1]
            default = 0.1
        [TRANSFORMER.params.early_stopping]
            name = "Earling Stopping"
            type = "select"
            options = [true, false]
            default = true
        [TRANSFORMER.params.max_iters]
            name = "Max Iterations"
            type = "int"
            range = [0, 100]
            default = 5

#------------------------------------------------------------------------------
#
# Section 4: quantum computing-based models
#
#------------------------------------------------------------------------------

[QSVM]
    name = "Quantum Support Vector Machine (QSVM)"
    [QSVM.params]
        [QSVM.params.implementation_name]
            name = "Implementation"
            type = "select"
            options = ["qiskit"]
            default = "qiskit"
        [QSVM.params.provider_name]
            name = "Provider Name"
            type = "select"
            options = ["qiskit"]
            default = "qiskit"
        [QSVM.params.hardware]
            name = "Hardware"
            type = "select"
            options = ["cpu"]
            default = "cpu"
        [QSVM.params.encoder_name]
            name = "Encoder Name"
            type = "select"
            options = ["zz"]
            default = "zz"
        [QSVM.params.n_qubits]
            name = "Number of Qubits"
            type = "int"
            range = [2, 4]
            default = 4
        [QSVM.params.featuremap_reps]
            name = "Feature Map Repetitions"
            type = "int"
            range = [1, 2]
            default = 2
        [QSVM.params.entanglement]
            name = "Entanglement"
            type = "select"
            options = ["full"]
            default = "full"
        [QSVM.params.kernel]
            name = "Kernel"
            type = "select"
            options = ["fidelity"]
            default = "fidelity"
        [QSVM.params.shots]
            name = "Number of Shots"
            type = "int"
            range = [1, 1024]
            default = 1024

[QNN]
    name = "Quantum Nueral Network (QNN)"
    [QNN.params]
        [QNN.params.implementation_name]
            name = "Implementation Name"
            type = "select"
            options = ["qiskit"]
            default = "qiskit"
        [QNN.params.provider_name]
            name = "Provider Name"
            type = "select"
            options = ["qiskit"]
            default = "qiskit"
        [QNN.params.hardware]
            name = "Hardware"
            type = "select"
            options = ["cpu", "gpu"]
            default = "cpu"
        [QNN.params.encoder_name]
            name = "Encoder Name"
            type = "select"
            options = ["zz"]
            default = "zz"
        [QNN.params.n_qubits]
            name = "Number Qubits"
            type = "int"
            range = [2, 4]
            default = 2
        [QNN.params.entanglement]
            name = "Entanglement"
            type = "select"
            options = ["full"]
            default = "full"
        [QNN.params.featuremap_reps]
            name = "Feature Map Repetitions"
            type = "int"
            range = [1, 2]
            default = 2
        [QNN.params.ansatz_reps]
            name = "Ansatz Repetitions"
            type = "int"
            range = [1, 2]
            default = 2
        [QNN.params.ansatz_name]
            name = "Ansatz Name"
            type = "select"
            options = ["real_amplitudes"]
            default = "real_amplitudes"
        [QNN.params.optim_name]
            name = "Optimizer Name"
            type = "select"
            options = ["cobyla"]
            default = "cobyla"
        [QNN.params.optim_max_steps]
            name = "Optimizer Maximum Steps"
            type = "int"
            range = [1, 100]
            default = 50
        [QNN.params.meas_type]
            name = "Measurement Type"
            type = "select"
            options = ["sampler"]
            default = "sampler"
        
[QRBM]
    name = "Quantum Restricted Boltzmann Machine (QRBM)"
    [QRBM.params]
        [QRBM.params.implementation_name]
            name = "Implementation Name"
            type = "select"
            options = ["dwave"]
            default = "dwave"
        [QRBM.params.provider_name]
            name = "Provider Name"
            type = "select"
            options = ["dwave"]
            default = "dwave"
        [QRBM.params.encoder_name]
            name = "Encoder Name"
            type = "select"
            options = ["bqm"]
            default = "bqm"
        [QRBM.params.n_hidden]
            name = "Number Hidden Units"
            type = "int"
            range = [1, 2]
            default = 2
        [QRBM.params.shots]
            name = "Number of Shots"
            type = "int"
            range = [1, 2]
            default = 2
        [QRBM.params.chain_strength]
            name = "Chain Strength"
            type = "float"
            range = [0, 10]
            default = 2.0
        [QRBM.params.knn_n_neighbors]
            name = "KNN Neighbors"
            type = "int"
            range = [1, 10]
            default = 2

#------------------------------------------------------------------------------
#
# end of file
#
#------------------------------------------------------------------------------

